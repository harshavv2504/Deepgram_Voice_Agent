[metadata]
name = techflow-voice-agent
version = 1.0.0
author = TechFlow Solutions
author_email = contact@techflow.com
description = AI-powered voice agent system for TechFlow Solutions
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/techflow/techflow-voice-agent
project_urls =
    Bug Tracker = https://github.com/techflow/techflow-voice-agent/issues
    Documentation = https://github.com/techflow/techflow-voice-agent#readme
    Source Code = https://github.com/techflow/techflow-voice-agent
    Changelog = https://github.com/techflow/techflow-voice-agent/blob/main/CHANGELOG.md
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Customer Service
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Communications :: Telephony
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Multimedia :: Sound/Audio :: Speech
    Topic :: Office/Business :: Customer Relationship Management
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Framework :: Flask
    Environment :: Web Environment

[options]
package_dir =
    = .
packages = find:
python_requires = >=3.10
install_requires =
    PyAudio==0.2.14
    websockets==12.0
    janus==1.0.0
    Flask==3.0.0
    Flask-SocketIO==5.3.6
    python-dotenv==1.0.0
    requests==2.32.3
    google-api-python-client==2.108.0
    google-auth-httplib2==0.1.1
    google-auth-oauthlib==1.1.0
    markdown>=3.5.0
    PyYAML>=6.0
    frontmatter>=3.0.0

[options.packages.find]
where = .
include = common*, knowledgebase*
exclude = tests*

[options.extras_require]
dev =
    pytest>=7.4.3
    pytest-cov>=4.1.0
    pytest-mock>=3.12.0
    pytest-asyncio>=0.21.1
    black>=23.12.1
    isort>=5.13.2
    flake8>=6.1.0
    mypy>=1.8.0
    pylint>=3.0.3
    pre-commit>=3.6.0
    bandit>=1.7.5
    safety>=2.3.5
docs =
    sphinx>=7.2.6
    sphinx-rtd-theme>=2.0.0
    myst-parser>=2.0.0
test =
    pytest>=7.4.3
    pytest-cov>=4.1.0
    pytest-mock>=3.12.0
    pytest-asyncio>=0.21.1
    factory-boy>=3.3.0
    faker>=21.0.0
    responses>=0.24.1
    httpx>=0.26.0

[options.entry_points]
console_scripts =
    voice-agent = client:main

[options.package_data]
* = *.md, *.json, *.html, *.css, *.js, *.mdx

# Flake8 configuration
[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .venv,
    venv,
    .env,
    env,
    .tox,
    .eggs,
    *.egg
per-file-ignores =
    __init__.py:F401
    tests/*:S101,S106
max-complexity = 10
import-order-style = google
application-import-names = common,knowledgebase
docstring-convention = google

# MyPy configuration
[mypy]
python_version = 3.10
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
ignore_missing_imports = True

[mypy-pyaudio.*]
ignore_missing_imports = True

[mypy-janus.*]
ignore_missing_imports = True

[mypy-frontmatter.*]
ignore_missing_imports = True

[mypy-google.*]
ignore_missing_imports = True

# Coverage configuration
[coverage:run]
source = common, knowledgebase
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
ignore_errors = True
show_missing = True
precision = 2
fail_under = 80

[coverage:html]
directory = htmlcov

# Tool configuration for older tools that don't support pyproject.toml
[tool:pytest]
minversion = 7.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=common
    --cov=knowledgebase
    --cov-branch
    --cov-report=term-missing
    --cov-fail-under=80
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    audio: marks tests that require audio hardware
    api: marks tests that require external API access
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

[bdist_wheel]
universal = 0